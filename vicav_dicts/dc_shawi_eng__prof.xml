<profile when="2022_04_28_11_18_54" xml:id="dictProfile" xml:space="preserve">





<basexRest>https://shawi.acdh-ch-dev.oeaw.ac.at</basexRest>





<displayString>/concat(
(tei:form[1]/tei:orth)[1],
(tei:quote)[1],
" [",
(tei:gramGrp[1]/tei:gram[@type="pos"])[1],
"]"
)</displayString>




<entryStyle>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" xmlns:tei="http://www.tei-c.org/ns/1.0" version="1.0">
    <xsl:output method="html"/>
    <xsl:template match="/">
        <div>
        <xsl:for-each select="//tei:div[@type='entry']">
            <xsl:for-each select="tei:cit">
               <table width="600px">
                  <xsl:if test="//tei:usg/tei:placeName">
                     <tr><td class="tdHead">Placename: </td><td><xsl:value-of select="tei:usg/tei:placeName"/>
                    </td>
                  </tr>
                  </xsl:if>
                  
                  <tr>
                     <td colspan="2"><xsl:value-of select="tei:quote"/>
                  </td>
                  </tr>
                  <xsl:for-each select="tei:cit[@type='translation']">
                     <tr>
                     
                        <td colspan="2">
                           <xsl:choose>
                             <xsl:when test="@xml:lang='de'"><span class="spTransGerm"><xsl:value-of select="tei:quote"/><xsl:if test="tei:usg"> (<xsl:value-of select="tei:usg"/>)</xsl:if>
                          </span>
                        </xsl:when>
                             <xsl:otherwise><span class="spTrans"><xsl:value-of select="tei:quote"/><xsl:if test="tei:usg"> (<xsl:value-of select="tei:usg"/>)</xsl:if>
                          </span>
                        </xsl:otherwise>
                           </xsl:choose>
                        </td>
                     </tr>
                  </xsl:for-each>
                <tr>
                   <td class="tdHead">Editors</td>
                   <td>
                      <xsl:for-each select="//tei:fs">
                         <xsl:value-of select="tei:f[@name='who']/tei:symbol/@value"/> (<xsl:value-of select="@type"/>): 
                         <xsl:value-of select="tei:f[@name='when']/tei:symbol/@value"/>
                         <xsl:if test="tei:f[@name='status']">
                            <xsl:text> (</xsl:text><xsl:value-of select="tei:f[@name='status']/tei:symbol/@value"/>)
                         </xsl:if>
                         <br/>
                      </xsl:for-each>
                   </td>
               </tr>
               </table>
            </xsl:for-each>
            
            <xsl:for-each select="tei:entry">
               <xsl:if test="not(//tei:gram[@type='synRoot']) and //tei:entry">
                  <span style="color:red">No synRoot</span><br/>
               </xsl:if>
               <xsl:if test="not(//tei:gram[@type='diaRoot']) and //tei:entry">
                  <span style="color:red">No diaRoot</span><br/>
               </xsl:if>
               <xsl:if test="string-length(//tei:gram[@type='pos'])&lt;1 and //tei:entry">
                  <span style="color:red">No pos</span><br/>
               </xsl:if>

               <table width="600px">
                  <xsl:for-each select="tei:form[@type='lemma'] | tei:form[@type='multiWordUnit'] ">
                     <tr>
                        <td class="tdHead">Lemma</td>
                        <td>
                           <xsl:value-of select="tei:orth"/><xsl:text> </xsl:text>

                           <xsl:if test="../tei:gramGrp/tei:gram[@type='pos']">
                              <span class="gramGrp">[<xsl:value-of select="../tei:gramGrp/tei:gram[@type='pos']"/>]</span>
                           </xsl:if>

                           <xsl:if test="tei:usg/tei:placeName">
                              <span class="spPlaceName"> (<xsl:value-of select="tei:usg/tei:placeName"/>)</span>
                           </xsl:if>

                           <xsl:for-each select="tei:form[@type='variant']">
                           <tr>
                              <td class="tdHead">Lemma (var.)</td>
                              <td>
                                 <xsl:if test="tei:orth"><xsl:value-of select="tei:orth"/>
                            </xsl:if> 
                                 <xsl:choose>
                                    <xsl:when test="@ana='#n_pl'"><span class="gramGrp">[plural]</span>
                              </xsl:when>
                                    <xsl:when test="@ana='#v_pres_sg_p3'"><span class="gramGrp">[present tense]</span>
                              </xsl:when>
                                 </xsl:choose>
                              </td>
                            </tr>
                           </xsl:for-each>
                        </td>
                     </tr>
                     
                           <xsl:if test="string-length(//tei:gram[@type='subc'])">
                              <tr>
                                <td class="tdHead">Subcat.</td>
                                <td><xsl:value-of select="//tei:gram[@type='subc']"/>
                      </td>
                              </tr>
                           </xsl:if>
                     
                           <xsl:if test="string-length(//tei:gram[@type='morphPatternSg'])">
                              <tr>
                                <td class="tdHead">morphPatSg</td>
                                <td><xsl:value-of select="//tei:gram[@type='morphPatternSg']"/>
                      </td>
                              </tr>
                           </xsl:if>
                     
                           <xsl:if test="string-length(//tei:gram[@type='morphPatternPl'])">
                              <tr>
                                <td class="tdHead">morphPatPl</td>
                                <td><xsl:value-of select="//tei:gram[@type='morphPatternPl']"/>
                      </td>
                              </tr>
                           </xsl:if>
                     
                        <xsl:if test="string-length(//tei:gram[@type='synRoot' or @type='diaRoot' or @type='root'])">
                           <xsl:if test="string-length(//tei:gram[@type='synRoot'])">
                              <tr>
                                <td class="tdHead">synRoot</td>
                                <td><xsl:value-of select="//tei:gram[@type='synRoot']"/>
                        </td>
                              </tr>
                           </xsl:if>
                           <xsl:if test="string-length(//tei:gram[@type='diaRoot'])">
                              <tr>
                                <td class="tdHead">diaRoot</td>
                                <td><xsl:value-of select="//tei:gram[@type='diaRoot']"/>
                        </td>
                              </tr>
                           </xsl:if>
                           <xsl:if test="string-length(//tei:gram[@type='root'])">
                              <tr>
                                <td class="tdHead">root</td>
                                <td><xsl:value-of select="//tei:gram[@type='root']"/>
                        </td>
                              </tr>
                           </xsl:if>
                        </xsl:if>
                  </xsl:for-each>

                  <xsl:for-each select="tei:form[@type='stem'] | tei:form[@type='inflected'] ">
                     <tr>
                        <td class="tdHead">
                           <xsl:if test="@type='stem'">Stem</xsl:if>
                           <xsl:if test="@type='inflected'">Infl.</xsl:if>
                        </td>
                        <td class="tdTrans">
                           <xsl:if test="tei:orth"><xsl:value-of select="tei:orth"/>
                      </xsl:if>  
                           <xsl:choose>
                               <xsl:when test="@ana='#n_pl'"><span class="gramGrp">[plural]</span>
                        </xsl:when>
                               <xsl:when test="@ana='#n_f'"><span class="gramGrp">[feminine]</span>
                        </xsl:when>
                               <xsl:when test="@ana='#adj_f'"><span class="gramGrp">[feminine]</span>
                        </xsl:when>
                               <xsl:when test="@ana='#adj_pl'"><span class="gramGrp">[plural]</span>
                        </xsl:when>
                               <xsl:when test="@ana='#v_pres_sg_p3'"><span class="gramGrp">[present tense]</span>
                        </xsl:when>
                               <xsl:otherwise><span class="gramGrp">[<xsl:value-of select="@ana"/>]</span>
                        </xsl:otherwise>
                           </xsl:choose>

                           <xsl:for-each select="tei:form[@type='variant']">
                           <tr>
                              <td class="tdHead">   (var.)</td>
                              <td>
                                 <xsl:if test="tei:orth"><span class="trans"><xsl:value-of select="tei:orth"/>
                              </span>
                            </xsl:if>
                                 
                                 <xsl:choose>
                                    <xsl:when test="@ana='#n_pl'"><span class="gramGrp">[plural]</span>
                              </xsl:when>
                                    <xsl:when test="@ana='#adj_f'"><span class="gramGrp">[feminine]</span>
                              </xsl:when>
                                    <xsl:when test="@ana='#adj_pl'"><span class="gramGrp">[plural]</span>
                              </xsl:when>
                                    <xsl:when test="@ana='#v_pres_sg_p3'"><span class="gramGrp">[present tense]</span>
                              </xsl:when>
                                 </xsl:choose>
                              </td>
                            </tr>
                            
                           </xsl:for-each>

                        </td>
                     </tr>
                     
                  </xsl:for-each>
               
                  <xsl:for-each select="tei:sense">
                     <tr>
                        <td class="tdSenseHead">
                           <xsl:if test="tei:gramGrp/tei:gram"><xsl:value-of select="tei:gramGrp/tei:gram"/>
                      </xsl:if>
                        </td>
                        
                        <td class="tdSense">
                           <xsl:for-each select="tei:def">
                              <div class="dvDef">
                                 <xsl:choose>
                                    <xsl:when test="@xml:lang='de'"><span class="spDefGerm">(<xsl:value-of select="."/>)</span>
                            </xsl:when>
                                    <xsl:when test="@xml:lang='tr'"><span class="spDefTurk">(<xsl:value-of select="."/>)</span>
                            </xsl:when>
                                    <xsl:otherwise><span class="spDef">(<xsl:value-of select="."/>)</span>
                            </xsl:otherwise>
                                 </xsl:choose>
                                 
                              </div>
                           </xsl:for-each>
                           
                           <xsl:for-each select="tei:cit[@type='translation']">
                              <div class="dvDef">
                                 <xsl:choose>
                                    <xsl:when test="@xml:lang='de'"><span class="spTransGerm"><xsl:value-of select="tei:quote"/><xsl:if test="tei:usg"> (<xsl:value-of select="tei:usg"/>)</xsl:if>
                              </span>
                            </xsl:when>
                                    <xsl:when test="@xml:lang='tr'"><span class="spDefTurk"><xsl:value-of select="tei:quote"/>
                              </span>
                            </xsl:when>
                                    <xsl:otherwise><span class="spTrans"><xsl:value-of select="tei:quote"/><xsl:if test="tei:usg"> (<xsl:value-of select="tei:usg"/>)</xsl:if>
                              </span>
                            </xsl:otherwise>
                                 </xsl:choose>
                                 
                              </div>
                           </xsl:for-each>

                           <xsl:for-each select="tei:cit[@type='example']">
                              <div class="dvExamples">
                                 <xsl:choose>
                                    <xsl:when test="@type='example'">
                                       <xsl:if test="not(tei:fs/tei:f/tei:symbol[@value='released'])"><b style="color:red">Not released: </b>
                              </xsl:if>
                                       <span class="spExample">
                                         <xsl:value-of select="tei:quote"/><i class="iTransEn">  <xsl:value-of select="tei:cit[@xml:lang='en']/tei:quote"/>
                                </i>
                                         <i class="iTransDe">  <xsl:value-of select="tei:cit[@xml:lang='de']/tei:quote"/>
                                </i>
                                       </span>
                                    </xsl:when>
                                      
                                    <xsl:when test="@type='multiWordUnit'">
                                      <span class="spMWU"><xsl:value-of select="tei:form/tei:orth"/><i class="iTrans">  <xsl:value-of select="tei/sense/tei:cit/tei:quote"/>
                                </i>
                              </span>
                            </xsl:when>
                                 </xsl:choose>
                             </div>
                           </xsl:for-each>
                           
                           <xsl:for-each select="tei:usg">
                              <div class="dvUsg"><xsl:value-of select="."/>
                        </div>
                           </xsl:for-each>
                        </td>
                     </tr>
                        
                 
               </xsl:for-each>

                <tr>
                   <td class="tdHead">Editors</td>
                   <td>
                      <xsl:for-each select="//tei:entry/tei:fs | //tei:cit/tei:fs">
                         <xsl:value-of select="tei:f[@name='who']/tei:symbol/@value"/> (<xsl:value-of select="@type"/>): 
                         <xsl:value-of select="tei:f[@name='when']/tei:symbol/@value"/>
                         <xsl:if test="tei:f[@name='status']">
                            <xsl:text> (</xsl:text><xsl:value-of select="tei:f[@name='status']/tei:symbol/@value"/>)
                         </xsl:if>
                         <br/>
                      </xsl:for-each>
                   </td>
               </tr>
               
               </table>
            </xsl:for-each>
          </xsl:for-each>
          <style type="text/css">
            @scope {
            table {
            border-collapse: collapse;
            background: white;
            }
            td {
            border: 1px solid black;
            padding-left: 5px;
            vertical-align: top;
            }
            
            .dvExamples {
            border: 1px solid black;
            background: rgb(210,210,255);
            }
            
            .dvArguments {
            border: 1px solid black;
            background: rgb(210,210,255);
            }
            
            .dvUsg {
            color: green;
            font-style: italic;
            }
            
            .tdHead {
            font-weight: bold;
            color: white;
            background: blue;
            padding-right: 5px;
            width: 100px;
            }
            
            .tdSenseHead {
            font-weight: bold;
            font-style: italic;
            color: blue;
            background: rgb(181,213,251);
            padding-right: 5px;
            width: 100px;
            text-align: right;
            }
            
            .tdSense {
            background: rgb(248,234,255);
            border-style: dotted;
            }
            
            .gramGrp {
            color: rgb(255,128,0);
            font-weight: bold;
            }
            
            .spArab {
            direction:rtl;
            }
            
            .spTrans {
            direction: rtl;
            font-style: italic;
            color: blue;
            }
            
            .spPlaceName {
            font-style: italic;
            color: green;
            }
            
            .spTransGerm {
            font-style: italic;
            color: rgb(180,180,180);
            }
            
            .spDef {
            font-style: italic;
            color: green;
            }
            
            .spDefGerm {
            font-style: italic;
            color: rgb(160,160,160);
            }
            
            .spDefTurk {
            font-style: italic;
            color: green;
            }
            
            .iTransEn {
            font-style: italic;
            color: green;
            }
            
            .iTransDe {
            font-style: italic;
            color: purple;
            }
            }
          </style>
        </div>
    </xsl:template>
</xsl:stylesheet>
</entryStyle>
<entryTemplates>//*********************************************************//
//* ENTRY (lemma) - TEMPLATE ******************************//
//*********************************************************//
<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_entry_001" xml:id="">
  <form type="lemma">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <gramGrp>
      <gram type="pos">-</gram>
      <gram type="synRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
      <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="tr">
         <quote/>
      </cit>
    </sense>
 </entry>

<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_noun_001" xml:id="">
     <form type="lemma">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <form type="inflected" ana="#n_pl">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth> 
   </form>

   <gramGrp>
      <gram type="pos">noun</gram>
      <gram type="morphPatternSg" xml:lang="ar-acm-x-shawi-vicav">123</gram>
      <gram type="morphPatternPl" xml:lang="ar-acm-x-shawi-vicav">123</gram>
      <gram type="synRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
      <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote> </quote>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote> </quote>
      </cit>

      <cit type="translation" xml:lang="tr">
         <quote> </quote>
      </cit>
   </sense>
  </entry>
  
<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_adjective_001" xml:id="">
   <form type="lemma">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <form type="inflected" ana="#a_f">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <form type="inflected" ana="#a_pl">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <gramGrp>
      <gram type="pos">adjective</gram>
      <gram type="morphPatternSg" xml:lang="ar-acm-x-shawi-vicav">123</gram>
      <gram type="morphPatternPl" xml:lang="ar-acm-x-shawi-vicav">123</gram>
      <gram type="synRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
      <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav"/>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote>-</quote>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote>-</quote>
      </cit>

      <cit type="translation" xml:lang="tr">
         <quote>-</quote>
      </cit>
   </sense>
</entry>

<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_verb_001" xml:id="">
   <form type="lemma">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <form type="inflected" ana="#v_pres_sg_p3">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <gramGrp>
      <gram type="pos">verb</gram>
      <gram type="subc">I</gram>
      <gram type="synRoot" xml:lang="ar-acm-x-shawi-vicav"/>
      <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav"/>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="tr">
         <quote>-</quote>
      </cit>
   </sense>
</entry>
 
    <entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_adverb_001" xml:id="">
   <form type="lemma">
      <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <gramGrp>
      <gram type="pos">adverb</gram>
      <gram type="synRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
      <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote/>
      </cit>

      <cit type="translation" xml:lang="tr">
         <quote/>
      </cit>

   </sense>
  </entry>
  
<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_lvc_001" xml:id="">
   <form type="multiWordUnit">
    <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>

   <gramGrp>
      <gram type="pos">lightVerbConstruction</gram>
   </gramGrp>

   <sense>
      <cit type="translation" xml:lang="en">
         <quote>-</quote>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote>-</quote>

      </cit> <cit type="translation" xml:lang="tr">
         <quote>-</quote>
      </cit>
      
   </sense>

</entry>

//*********************************************************//
//* ENTRY (multiWordUnit) - TEMPLATE **********************//
//*********************************************************//
<entry xmlns="http://www.tei-c.org/ns/1.0" name="fa_mwu_001" xml:id="">
   <form type="multiWordUnit">
     <usg>
         <placeName>Harran-Urfa</placeName>
      </usg>
      <orth xml:lang="ar-acm-x-shawi-vicav">-</orth>
   </form>
   
    <gramGrp>
    <gram type="diaRoot" xml:lang="ar-acm-x-shawi-vicav">-</gram>
   </gramGrp>
            
    <sense>
      <cit type="translation" xml:lang="en">
         <quote>-</quote>
      </cit>

      <cit type="translation" xml:lang="de">
         <quote>-</quote>

      </cit> <cit type="translation" xml:lang="tr">
         <quote>-</quote>
      </cit>
      
   </sense>

</entry>

//*********************************************************//
//* EXAMPLE - TEMPLATE ************************************//
//*********************************************************//
<cit xmlns="http://www.tei-c.org/ns/1.0" name="fa_example_001" xml:id="" type="example">
   <usg>
      <placeName>Harran-Urfa</placeName>
   </usg>

   <quote xml:lang="ar-acm-x-shawi-vicav">-</quote>
   
   <cit type="translation" xml:lang="en">
      <quote>-</quote>
   </cit>   

   <cit type="translation" xml:lang="de">
      <quote>-</quote>
   </cit>
                                       
</cit>


//******************************************************************//
//******************************************************************//
//******************************************************************//
</entryTemplates>
<entryTemplatesNamesXPath>//tei:entry | //tei:cit</entryTemplatesNamesXPath>


<IDXPath>//tei:form[@type="lemma"]/tei:orth[@xml:lang="ar-acm-x-shawi-vicav"] | //tei:cit[@type="example"]/tei:quote[@xml:lang="ar-acm-x-shawi-vicav"]  | //tei:form[@type="multiWordUnit"]/tei:orth[@xml:lang="ar-acm-x-shawi-vicav"] | /tei:cit/tei:quote[1] </IDXPath>
<IDCount>57</IDCount>




<lemmaXPath>//tei:form[@type="lemma"]/tei:orth[@xml:lang="ar-acm-x-shawi-vicav"] || //tei:form[@type="multiWordUnit"]/tei:orth[@xml:lang="ar-acm-x-shawi-vicav"] || //tei:cit[@type="example"]/tei:quote[@xml:lang="ar-acm-x-shawi-vicav"]</lemmaXPath>


<mainLangLabel>ar-acm-x-shawi-vicav</mainLangLabel>




<queryTemplate/>
<queryTemplates>

<queryTemplate label="ft_all">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry/.//node()[text() contains text "{subQuery}" using wildcards] | 
   collection($__db__)//tei:cit[@type='example']//tei:quote[text() contains text "{subQuery}" using wildcards]
</queryTemplate>

<queryTemplate label="ft_all_complete" type="complete">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry/.//node()[text() contains text "{subQuery}" using wildcards] | 
   collection($__db__)//tei:cit[@type='example']/tei:quote[text() contains text "{subQuery}" using wildcards]
</queryTemplate>

<queryTemplate label="ft_lem">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry/tei:form[@type='lemma']/tei:orth[text() contains text "{subQuery}" using wildcards] |
   collection($__db__)//tei:entry/tei:form[@type='multiWordUnit']/tei:orth[text() contains text "{subQuery}" using wildcards]
</queryTemplate>

<queryTemplate label="ft_sid">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry[contains(@xml:id,{noSubstQuery})] | 
   collection($__db__)//tei:teiHeader[contains(@xml:id,{noSubstQuery})] | 
   collection($__db__)//tei:cit[contains(@xml:id,{noSubstQuery})] 
</queryTemplate>

<queryTemplate label="ft_pos">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry[tei:gramGrp/tei:gram[@type='pos'][{subQuery}]]
</queryTemplate>

<queryTemplate label="ft_tr">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:entry/tei:sense/tei:cit/tei:quote[text() contains text "{subQuery}" using wildcards]
</queryTemplate>

<queryTemplate label="ft_ex">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:cit[@type='example']/tei:quote[text() contains text "{subQuery}" using wildcards] |
   collection($__db__)//tei:cit[@type='example']/tei:cit/tei:quote[text() contains text "{subQuery}" using wildcards]  
</queryTemplate>

<queryTemplate label="header">
   declare namespace tei = 'http://www.tei-c.org/ns/1.0';
   declare variable $__db__ external;
   collection($__db__)//tei:teiHeader
</queryTemplate>                                                         
                                                     
</queryTemplates>







<sortedDisplay>true</sortedDisplay>

<tableName label="dc_shawi_eng">dc_shawi_eng</tableName>




</profile>