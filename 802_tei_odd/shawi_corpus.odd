<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0" 
    xmlns:tei="http://www.tei-c.org/ns/1.0" 
    xmlns:s="http://purl.oclc.org/dsdl/schematron">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Shawi corpus document ODD</title>
                <author>Mau Zsofia Abraham</author>
            </titleStmt>
            <publicationStmt>
                <publisher>ACDH-OeAW</publisher>
                <pubPlace>Vienna</pubPlace>
                <date>2021</date>
                <availability status="restricted">
                    <p><ref type="license" target="http://creativecommons.org/licenses/by-nc-sa/3.0/"/></p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>This is an original digital text</p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec ident="vicav_corpus" start="TEI">
                <moduleRef key="header" include="textClass catRef availability availability change distributor encodingDesc fileDesc funder idno licence listPrefixDef prefixDef profileDesc publicationStmt rendition revisionDesc sourceDesc tagsDecl teiHeader titleStmt"/>
                <moduleRef key="core" include="address addrLine author bibl cit date editor desc graphic head hi quote name note p publisher pubPlace ref respStmt resp rs series title media"/>
                <moduleRef key="tei"/>
                <moduleRef key="tagdocs" include="code att gi"/>
                <moduleRef key="namesdates" include="person orgName persName forename surname listPerson place placeName"></moduleRef>
                <moduleRef key="textstructure" include="body div TEI text"/>
                <moduleRef key="corpus"/>
                <moduleRef key="analysis" include="w pc phr span spanGrp"/>
                <moduleRef key="linking" include="timeline when anchor"/>
                <moduleRef key="spoken" include="annotationBlock u recordingStmt recording"></moduleRef>

                <elementSpec ident="resp" module="core" mode="replace">
                    <content>
                        <valList type="closed">
                            <valItem ident="Rec. person"><desc>Transcribed by</desc></valItem>
                            <valItem ident="transcribed by"><desc>Transcribed by</desc></valItem>
                            <valItem ident="transcription checked by"><desc>Transcription checked by</desc></valItem>
                            <valItem ident="transcription checked by2"><desc>Transcription checked by2</desc></valItem>
                            <valItem ident="translated by"><desc>Translated by</desc></valItem>
                            <valItem ident="translation checked by"><desc>Translation checked by</desc></valItem>
                            <valItem ident="glossed by"><desc>Glossed by</desc></valItem>
                            <valItem ident="glossing checked by"><desc>Glossing checked by</desc></valItem>
                        </valList>
                    </content>
                    <constraintSpec ident="uniqueRespValues" scheme="schematron">
                        <constraint>
                            <s:rule context="tei:respStmt">
                                <s:assert test="not(tei:resp[. != 'Rec. person' and . = preceding::tei:resp])">Each value inside 'respStmt' must be unique, except for 'Rec. person'</s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                </elementSpec>

                <elementSpec ident="fileDesc" module="header" mode="change">
                    <constraintSpec ident="rec-person-twice" scheme="schematron">
                        <constraint>
                            <s:rule context="tei:respStmt">
                                <s:assert test="count(//tei:resp[text() = 'Rec. person']) = 2">The role 'Rec. person' should appear exactly twice across all respStmt elements</s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                </elementSpec>

                <elementSpec ident="respStmt" module="core" mode="change">
                    <constraintSpec ident="name-check" scheme="schematron">
                        <constraint>
                            <s:rule context="tei:resp[text()='Rec. person']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[6]">
                                    The person for the role 'Rec. person' should be: <s:value-of select="$recFileData/tei:cell[6]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='transcribed by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[8]">
                                    The person for the role 'transcribed by' should be: <s:value-of select="$recFileData/tei:cell[8]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='transcription checked by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[9]">
                                    The person for the role 'transcription checked by' should be: <s:value-of select="$recFileData/tei:cell[9]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='transcription checked by2']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[10]">
                                    The person for the role 'transcription checked by2' should be: <s:value-of select="$recFileData/tei:cell[10]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='translated by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[11]">
                                    The person for the role 'translated by' should be: <s:value-of select="$recFileData/tei:cell[11]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='translation checked by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[12]">
                                    The person for the role 'translation checked by' should be: <s:value-of select="$recFileData/tei:cell[12]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='glossed by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[13]">
                                    The person for the role 'glossed by' should be: <s:value-of select="$recFileData/tei:cell[13]"/>
                                </s:assert>
                            </s:rule>
                            <s:rule context="tei:resp[text()='glossing checked by']">
                                <s:let name="currentID" value="//tei:publicationStmt/tei:idno[@type='SHAWICorpusID']/text()"/>
                                <s:let name="recFile" value="'../../080_scripts_generic/080_01_ELAN2TEI/data/Shawi_Recordings.xml'"/>
                                <s:let name="recFileData" value="doc($recFile)//tei:table[tei:head[text()='Recordings']]/tei:row[@n &gt; 1][tei:cell[1][text() = $currentID]]"/>
                                <s:assert test="preceding-sibling::tei:persName = $recFileData/tei:cell[14]">
                                    The person for the role 'glossing checked by' should be: <s:value-of select="$recFileData/tei:cell[14]"/>
                                </s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                </elementSpec>
                
                <elementSpec ident="revisionDesc" module="header" mode="change">
                    <attList>
                        <attDef ident="status" mode="replace" usage="req">
                            <valList type="closed">
                                <valItem ident="generated">
                                    <desc>status automatically generated by elan2tei conversion workflow</desc>
                                </valItem>
                                <valItem ident="draft">
                                    <desc>after changes have been made manually in the 010_manannot folder</desc>
                                </valItem>
                                <valItem ident="done">
                                    <desc>from here on validation with odd makes sense</desc>
                                </valItem>
                                <valItem ident="checked">
                                    <desc>TODO description missing</desc>
                                </valItem>
                                <valItem ident="published">
                                    <desc>when checked and validated</desc>
                                </valItem>
                            </valList>
                        </attDef>
                    </attList>
                </elementSpec>

                <elementSpec ident="w" module="analysis" mode="change">
                    <constraintSpec ident="msd-spec" scheme="schematron">
                        <constraint>
                            <s:rule context="tei:w">
                                <s:let name="fLibFile" value="'../../010_manannot/fLib_shawi.xml'"/>
                                <s:let name="msd_values" value="doc($fLibFile)//tei:fvLib[@n='Morpho-syntactic annotations']/tei:fs/@xml:id"/>
                                <s:assert test="@msd = $msd_values">MSD: <s:value-of select="@msd"/> is not in list <s:value-of select="$msd_values"/></s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                    <constraintSpec ident="pos-spec" scheme="schematron">
                        <constraint>
                            <s:rule context="tei:w">
                                <s:let name="fLibFile" value="'../../010_manannot/fLib_shawi.xml'"/>
                                <s:let name="pos_values" value="doc($fLibFile)//tei:fLib[@n='Part of Speech']/tei:f/@xml:id"/>
                                <s:assert test="@pos = $pos_values">POS: <s:value-of select="@pos"/> is not in list <s:value-of select="$pos_values"/></s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>